// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CachedQuestionMetaDataColumns holds the columns for the "cached_question_meta_data" table.
	CachedQuestionMetaDataColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "cache_uid", Type: field.TypeString, Unique: true},
		{Name: "is_used", Type: field.TypeBool, Default: false},
		{Name: "expires_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "exam_cached_question_metadata", Type: field.TypeInt},
	}
	// CachedQuestionMetaDataTable holds the schema information for the "cached_question_meta_data" table.
	CachedQuestionMetaDataTable = &schema.Table{
		Name:       "cached_question_meta_data",
		Columns:    CachedQuestionMetaDataColumns,
		PrimaryKey: []*schema.Column{CachedQuestionMetaDataColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "cached_question_meta_data_exams_cached_question_metadata",
				Columns:    []*schema.Column{CachedQuestionMetaDataColumns[6]},
				RefColumns: []*schema.Column{ExamsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ExamsColumns holds the columns for the "exams" table.
	ExamsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "is_active", Type: field.TypeBool, Default: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "exam_category_exams", Type: field.TypeInt, Nullable: true},
	}
	// ExamsTable holds the schema information for the "exams" table.
	ExamsTable = &schema.Table{
		Name:       "exams",
		Columns:    ExamsColumns,
		PrimaryKey: []*schema.Column{ExamsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "exams_exam_categories_exams",
				Columns:    []*schema.Column{ExamsColumns[6]},
				RefColumns: []*schema.Column{ExamCategoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ExamAttemptsColumns holds the columns for the "exam_attempts" table.
	ExamAttemptsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "attempt_number", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "generated_exam_attempts", Type: field.TypeInt, Nullable: true},
		{Name: "user_attempts", Type: field.TypeUUID, Nullable: true},
	}
	// ExamAttemptsTable holds the schema information for the "exam_attempts" table.
	ExamAttemptsTable = &schema.Table{
		Name:       "exam_attempts",
		Columns:    ExamAttemptsColumns,
		PrimaryKey: []*schema.Column{ExamAttemptsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "exam_attempts_generated_exams_attempts",
				Columns:    []*schema.Column{ExamAttemptsColumns[4]},
				RefColumns: []*schema.Column{GeneratedExamsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "exam_attempts_users_attempts",
				Columns:    []*schema.Column{ExamAttemptsColumns[5]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ExamCategoriesColumns holds the columns for the "exam_categories" table.
	ExamCategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "is_active", Type: field.TypeBool, Default: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// ExamCategoriesTable holds the schema information for the "exam_categories" table.
	ExamCategoriesTable = &schema.Table{
		Name:       "exam_categories",
		Columns:    ExamCategoriesColumns,
		PrimaryKey: []*schema.Column{ExamCategoriesColumns[0]},
	}
	// ExamResultsColumns holds the columns for the "exam_results" table.
	ExamResultsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// ExamResultsTable holds the schema information for the "exam_results" table.
	ExamResultsTable = &schema.Table{
		Name:       "exam_results",
		Columns:    ExamResultsColumns,
		PrimaryKey: []*schema.Column{ExamResultsColumns[0]},
	}
	// ExamSettingsColumns holds the columns for the "exam_settings" table.
	ExamSettingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "number_of_questions", Type: field.TypeInt},
		{Name: "duration_minutes", Type: field.TypeInt},
		{Name: "negative_marking", Type: field.TypeFloat64, Nullable: true},
		{Name: "ai_prompt", Type: field.TypeString, Nullable: true},
		{Name: "other_details", Type: field.TypeJSON, Nullable: true, SchemaType: map[string]string{"postgres": "json"}},
		{Name: "max_attempts", Type: field.TypeInt, Default: 2},
		{Name: "evaluation_ai_prompt", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "exam_setting", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// ExamSettingsTable holds the schema information for the "exam_settings" table.
	ExamSettingsTable = &schema.Table{
		Name:       "exam_settings",
		Columns:    ExamSettingsColumns,
		PrimaryKey: []*schema.Column{ExamSettingsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "exam_settings_exams_setting",
				Columns:    []*schema.Column{ExamSettingsColumns[10]},
				RefColumns: []*schema.Column{ExamsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// GeneratedExamsColumns holds the columns for the "generated_exams" table.
	GeneratedExamsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "is_active", Type: field.TypeBool, Default: true},
		{Name: "raw_data", Type: field.TypeJSON, Nullable: true, SchemaType: map[string]string{"postgres": "jsonb"}},
		{Name: "raw_metadata", Type: field.TypeJSON, Nullable: true, SchemaType: map[string]string{"postgres": "jsonb"}},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "exam_generatedexams", Type: field.TypeInt, Nullable: true},
	}
	// GeneratedExamsTable holds the schema information for the "generated_exams" table.
	GeneratedExamsTable = &schema.Table{
		Name:       "generated_exams",
		Columns:    GeneratedExamsColumns,
		PrimaryKey: []*schema.Column{GeneratedExamsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "generated_exams_exams_generatedexams",
				Columns:    []*schema.Column{GeneratedExamsColumns[6]},
				RefColumns: []*schema.Column{ExamsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "first_name", Type: field.TypeString, Nullable: true},
		{Name: "last_name", Type: field.TypeString, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CachedQuestionMetaDataTable,
		ExamsTable,
		ExamAttemptsTable,
		ExamCategoriesTable,
		ExamResultsTable,
		ExamSettingsTable,
		GeneratedExamsTable,
		UsersTable,
	}
)

func init() {
	CachedQuestionMetaDataTable.ForeignKeys[0].RefTable = ExamsTable
	ExamsTable.ForeignKeys[0].RefTable = ExamCategoriesTable
	ExamAttemptsTable.ForeignKeys[0].RefTable = GeneratedExamsTable
	ExamAttemptsTable.ForeignKeys[1].RefTable = UsersTable
	ExamSettingsTable.ForeignKeys[0].RefTable = ExamsTable
	GeneratedExamsTable.ForeignKeys[0].RefTable = ExamsTable
}
