name: Backend Unit Tests

on:
  push:
    branches:
      - main
      - dev
    paths:
      - "backend/**"
      - ".github/**"

  pull_request:
    branches:
      - main
      - dev
    paths:
      - "backend/**"
      - ".github/**"

jobs:
  run_backend_unit_tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.23.0"

      - name: Install dependencies and Run tests
        run: |
          for dir in backend/server backend/ai-service backend/common; do
            echo "Testing in $dir"
            cd $dir
            go mod tidy
            go test -coverprofile=coverage.out -covermode=atomic ./...
            mv coverage.out "../../coverage-$dir.out"  # Move and rename coverage file to avoid overwriting
            cd -
          done

      - name: Combine coverage reports
        run: |
          echo "Combining coverage reports"
          cat backend/coverage-backend*.out > combined-coverage.out
          goveralls -service=github -coverprofile=combined-coverage.out -repotoken ${{ secrets.GITHUB_TOKEN }}

      - name: Generate LCOV report
        run: genhtml -o coverage-report combined-coverage.out
        working-directory: backend

      - name: Upload coverage report as artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: backend/coverage-report

  coverage_report:
    name: Generate coverage report comment
    needs: run_backend_unit_tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags

      - name: Download coverage report
        uses: actions/download-artifact@v3
        with:
          name: coverage-report
          path: coverage-report

      - name: Comment coverage report on PR
        uses: romeovs/lcov-reporter-action@v0.3.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          lcov-file: ./coverage-report/combined-coverage.info
          delete-old-comments: true
          title: "Code Coverage Report"
